{"ast":null,"code":"var _jsxFileName = \"/home/princekumar/Desktop/Dell/tarams_training_projects/react-register-form-one/src/HomePage.jsx\",\n  _s = $RefreshSig$();\n// HomePage.jsx\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport { Button, Checkbox } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Delete } from \"@mui/icons-material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport ToDoList from \"./ToDoList\";\nimport { red } from \"@mui/material/colors\";\n\n//import EditPage from \"../components/EditPage\";\n// import { Puff } from \"react-loader-spinner\";\nimport { Puff } from \"react-loader-spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const [toDoList, setToDoList] = useState([]);\n\n  //To increment count of serial number\n  const [newItemCounter, setNewItemCounter] = useState(0);\n\n  //Loader\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n\n  //Extract the username from the token stored in local storage\n  const token = localStorage.getItem(\"accessToken\");\n  const decodedToken = token ? JSON.parse(atob(token.split(\".\")[1])) : null;\n  const username = decodedToken ? decodedToken.username : null;\n  const handleLogout = () => {\n    //Remove the token from local storage\n    localStorage.removeItem(\"accessToken\");\n    navigate(\"/\");\n  };\n  const navigateToLogin = () => {\n    navigate(\"/\");\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3002/todolist\"); //Updated URL\n        const data = await response.json();\n        console.log(\"Fetched data:\", data); // Add this line\n\n        //Filter tasks based on the username\n        const userTasks = data.filter(task => task.username === username);\n        setToDoList(userTasks);\n        setNewItemCounter(userTasks.length); //Set the newItemCounter based on the number of elements\n\n        //Hide the loader after fetching the data\n        setIsLoading(false);\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [username]); //Trigger the event when username changes\n\n  //Delete\n  const handleDelete = async id => {\n    try {\n      const response = await axios.delete(`http://localhost:3002/todolist/${id}/${username}`);\n      if (response.status === 200) {\n        console.log(\"Data deleted successfully\");\n\n        // Fetch the updated data after deletion\n        const fetchData = async () => {\n          console.log(\"Fetching updated data...\");\n          try {\n            const response = await axios.get(`http://localhost:3002/todolist/user/${username}`);\n            const data = await response.data;\n            setToDoList(data);\n            setNewItemCounter(data.length);\n          } catch (error) {\n            console.log(\"Error fetching data:\", error);\n          }\n        };\n        // Call fetchData with the id of the deleted item\n\n        fetchUpdateData();\n      } else {\n        console.log(\"Failed to delete data:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"Error deleting data:\", error);\n    }\n  };\n  const handleToggleStatus = async (id, data, username) => {\n    console.log(data);\n    try {\n      const response = await axios.patch(`http://localhost:3002/todolist/${username}/${id}`,\n      // resolve after adding username\n      //`http://localhost:3002/todolist/${id}`,\n      {\n        ...data,\n        completed: !data.completed //Toggle the status\n      });\n      if (response.status === 200) {\n        console.log(\"Status toggled successfully.\");\n        const fetchData = async () => {\n          console.log(\"Fetching updated data...\");\n          try {\n            const response = await axios.get(\"http://localhost:3002/todolist/:username\");\n            const data = response.data;\n            setToDoList(data);\n            setNewItemCounter(data.length);\n          } catch (error) {\n            console.log(\"Error fetching data:\", error);\n          }\n        };\n        fetchUpdateData();\n      } else {\n        console.log(\"Failed to toggle status:\", response.status);\n      }\n    } catch (error) {\n      console.log(\"Error toggling status:\", error);\n    }\n  };\n\n  //Function to fetch updated data\n  const fetchUpdateData = async () => {\n    console.log(\"Fetching updated data...\");\n    try {\n      const response = await axios.get(`http://localhost:3002/todolist/user/${username}`);\n      //const response = await axios.get(\"http://localhost:3002/todolist\");\n      const data = response.data;\n      setToDoList(data);\n      setNewItemCounter(data.length);\n    } catch (error) {\n      console.log(\"Error fetching data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToDoFunctionalities, {\n      fetchUpdateData: fetchUpdateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(Puff, {\n        type: \"Puff\",\n        color: \"#00BFFF\",\n        height: 100,\n        width: 100,\n        timeout: 1000 // Set the timeout to 1000 milliseconds (1 second)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fragment1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"headingContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              id: \"heading1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: \"20px\",\n                  fontSize: \"60px\"\n                },\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"homeIntro\",\n              children: username ? `Hello, ${username}! Welcome to your dashboard.` : `Please Login to view your homepage`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mainContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"displayContents\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Serial\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Task ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Title\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Actions\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: toDoList.map((listContent, index) =>\n                  /*#__PURE__*/\n                  // <tr key={index}>\n                  _jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: index + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: listContent.userid\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: listContent.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                        label: \"Completed:\",\n                        type: \"checkbox\",\n                        name: \"completed\",\n                        checked: listContent.completed,\n                        onChange: () => handleToggleStatus(listContent.id, listContent, listContent.username)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [/*#__PURE__*/_jsxDEV(EditIcon\n                      // onClick={() => navigate(`/edit/${listContent.id}`)}//change\n                      , {\n                        onClick: () => navigate(`/edit/${listContent.username}/${listContent.id}`)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 238,\n                        columnNumber: 29\n                      }, this), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Delete, {\n                        onClick: () => handleDelete(listContent.id)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 27\n                    }, this)]\n                  }, listContent.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"homeButtons\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              style: {\n                backgroundColor: \"orange\",\n                minWidth: \"150px\"\n              },\n              onClick: handleLogout,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\"\n              // color=\"success\"\n              ,\n              style: {\n                color: \"ButtonShadow\"\n              },\n              id: \"button2\",\n              onClick: () => navigate(\"/add\"),\n              children: \"Add New Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(HomePage, \"EcNGNh6lvrROH1uBfzlKqv/35d4=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["axios","React","useState","useEffect","Button","Checkbox","useNavigate","Delete","EditIcon","ToDoList","red","Puff","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","toDoList","setToDoList","newItemCounter","setNewItemCounter","isLoading","setIsLoading","navigate","token","localStorage","getItem","decodedToken","JSON","parse","atob","split","username","handleLogout","removeItem","navigateToLogin","fetchData","response","fetch","data","json","console","log","userTasks","filter","task","length","error","handleDelete","id","delete","status","get","fetchUpdateData","handleToggleStatus","patch","completed","children","ToDoFunctionalities","fileName","_jsxFileName","lineNumber","columnNumber","type","color","height","width","timeout","className","style","marginRight","fontSize","map","listContent","index","userid","title","label","name","checked","onChange","onClick","variant","backgroundColor","minWidth","_c","$RefreshReg$"],"sources":["/home/princekumar/Desktop/Dell/tarams_training_projects/react-register-form-one/src/HomePage.jsx"],"sourcesContent":["// HomePage.jsx\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport { Button, Checkbox } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Delete } from \"@mui/icons-material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport ToDoList from \"./ToDoList\";\nimport { red } from \"@mui/material/colors\";\n\n//import EditPage from \"../components/EditPage\";\n// import { Puff } from \"react-loader-spinner\";\nimport { Puff } from \"react-loader-spinner\";\n\nfunction HomePage() {\n  const [toDoList, setToDoList] = useState([]);\n\n  //To increment count of serial number\n  const [newItemCounter, setNewItemCounter] = useState(0);\n\n  //Loader\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n\n  //Extract the username from the token stored in local storage\n  const token = localStorage.getItem(\"accessToken\");\n  const decodedToken = token ? JSON.parse(atob(token.split(\".\")[1])) : null;\n\n  const username = decodedToken ? decodedToken.username : null;\n  const handleLogout = () => {\n    //Remove the token from local storage\n    localStorage.removeItem(\"accessToken\");\n\n    navigate(\"/\");\n  };\n\n  const navigateToLogin = () => {\n    navigate(\"/\");\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3002/todolist\"); //Updated URL\n        const data = await response.json();\n        console.log(\"Fetched data:\", data); // Add this line\n\n        //Filter tasks based on the username\n        const userTasks = data.filter((task) => task.username === username);\n\n        setToDoList(userTasks);\n        setNewItemCounter(userTasks.length); //Set the newItemCounter based on the number of elements\n\n        //Hide the loader after fetching the data\n        setIsLoading(false);\n      } catch (error) {\n        console.log(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [username]); //Trigger the event when username changes\n\n  //Delete\n  const handleDelete = async (id) => {\n    try {\n      const response = await axios.delete(\n        `http://localhost:3002/todolist/${id}/${username}`\n      );\n\n      if (response.status === 200) {\n        console.log(\"Data deleted successfully\");\n\n        // Fetch the updated data after deletion\n        const fetchData = async () => {\n          console.log(\"Fetching updated data...\");\n\n          try {\n            const response = await axios.get(\n              `http://localhost:3002/todolist/user/${username}`\n            );\n            const data = await response.data;\n            setToDoList(data);\n            setNewItemCounter(data.length);\n          } catch (error) {\n            console.log(\"Error fetching data:\", error);\n          }\n        };\n        // Call fetchData with the id of the deleted item\n\n        fetchUpdateData();\n      } else {\n        console.log(\"Failed to delete data:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"Error deleting data:\", error);\n    }\n  };\n\n  const handleToggleStatus = async (id, data, username) => {\n    console.log(data);\n    try {\n      const response = await axios.patch(\n        `http://localhost:3002/todolist/${username}/${id}`, // resolve after adding username\n        //`http://localhost:3002/todolist/${id}`,\n        {\n          ...data,\n          completed: !data.completed, //Toggle the status\n        }\n      );\n\n      if (response.status === 200) {\n        console.log(\"Status toggled successfully.\");\n\n        const fetchData = async () => {\n          console.log(\"Fetching updated data...\");\n\n          try {\n            const response = await axios.get(\n              \"http://localhost:3002/todolist/:username\"\n            );\n            const data = response.data;\n            setToDoList(data);\n            setNewItemCounter(data.length);\n          } catch (error) {\n            console.log(\"Error fetching data:\", error);\n          }\n        };\n        fetchUpdateData();\n      } else {\n        console.log(\"Failed to toggle status:\", response.status);\n      }\n    } catch (error) {\n      console.log(\"Error toggling status:\", error);\n    }\n  };\n\n  //Function to fetch updated data\n  const fetchUpdateData = async () => {\n    console.log(\"Fetching updated data...\");\n\n    try {\n      const response = await axios.get(\n        `http://localhost:3002/todolist/user/${username}`\n      );\n      //const response = await axios.get(\"http://localhost:3002/todolist\");\n      const data = response.data;\n      setToDoList(data);\n      setNewItemCounter(data.length);\n    } catch (error) {\n      console.log(\"Error fetching data:\", error);\n    }\n  };\n\n  return (\n    <>\n      <ToDoFunctionalities fetchUpdateData={fetchUpdateData} />\n      <React.Fragment>\n        {isLoading ? (\n          <Puff\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={1000} // Set the timeout to 1000 milliseconds (1 second)\n          />\n        ) : (\n          <div>\n            <div className=\"fragment1\">\n              <div className=\"headingContainer\">\n                <h2 id=\"heading1\">\n                  <span style={{ marginRight: \"20px\", fontSize: \"60px\" }}>\n                    Home\n                  </span>\n                </h2>\n                <br />\n\n                <br />\n                <h1 className=\"homeIntro\">\n                  {username\n                    ? `Hello, ${username}! Welcome to your dashboard.`\n                    : `Please Login to view your homepage`}\n                </h1>\n                <br />\n              </div>\n              {/* Form to add new ToDo */}\n              <div className=\"mainContainer\">\n                <div className=\"displayContents\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>Serial</th>\n                        <th>Task ID</th>\n\n                        <th>Title</th>\n                        <th>Status</th>\n                        <th>Actions</th>\n                      </tr>\n                    </thead>\n                    <br />\n                    <tbody>\n                      {/* Data entered will be displayed here */}\n                      {toDoList.map((listContent, index) => (\n                        // <tr key={index}>\n                        <tr key={listContent.id}>\n                          <td>{index + 1}</td>\n                          <td>{listContent.userid}</td>\n                          <td>{listContent.title}</td>\n                          <td>\n                            <Checkbox\n                              label=\"Completed:\"\n                              type=\"checkbox\"\n                              name=\"completed\"\n                              checked={listContent.completed}\n                              onChange={() =>\n                                handleToggleStatus(\n                                  listContent.id,\n                                  listContent,\n                                  listContent.username\n                                )\n                              }\n                            />\n                          </td>\n                          {/* <td>{listContent.completed ? 'Yes' : 'No'}</td> */}\n                          <td>\n                            {/* Change */}\n                            {/* <EditIcon\n                        onClick={() =>\n                          navigate(`/edit/${listContent.id}`, {\n                            state: {\n                              id: listContent.id,\n                              userid: listContent.userid,\n                              title: listContent.title,\n                            },\n                          })\n                        }\n                      /> */}\n                            <EditIcon\n                              // onClick={() => navigate(`/edit/${listContent.id}`)}//change\n                              onClick={() =>\n                                navigate(\n                                  `/edit/${listContent.username}/${listContent.id}`\n                                )\n                              }\n                            />\n                            &nbsp;&nbsp;&nbsp;&nbsp;\n                            <Delete\n                              onClick={() => handleDelete(listContent.id)}\n                            />\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n            <>\n              <br />\n              <div className=\"homeButtons\">\n                <Button\n                  variant=\"contained\"\n                  style={{ backgroundColor: \"orange\", minWidth: \"150px\" }}\n                  onClick={handleLogout}\n                >\n                  Logout\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  // color=\"success\"\n                  style={{ color: \"ButtonShadow\" }}\n                  id=\"button2\"\n                  onClick={() => navigate(\"/add\")}\n                >\n                  Add New Task\n                </Button>\n              </div>\n            </>\n          </div>\n        )}\n      </React.Fragment>\n    </>\n  );\n}\n\nexport default HomePage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AACpB,SAASC,MAAM,EAAEC,QAAQ,QAAQ,eAAe;AAChD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,GAAG,QAAQ,sBAAsB;;AAE1C;AACA;AACA,SAASC,IAAI,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;;EAEvD;EACA,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMsB,QAAQ,GAAGlB,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMmB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACjD,MAAMC,YAAY,GAAGH,KAAK,GAAGI,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;EAEzE,MAAMC,QAAQ,GAAGL,YAAY,GAAGA,YAAY,CAACK,QAAQ,GAAG,IAAI;EAC5D,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAR,YAAY,CAACS,UAAU,CAAC,aAAa,CAAC;IAEtCX,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,MAAMY,eAAe,GAAGA,CAAA,KAAM;IAC5BZ,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACd,MAAMkC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC,CAAC,CAAC;QAChE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC,CAAC,CAAC;;QAEpC;QACA,MAAMI,SAAS,GAAGJ,IAAI,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACb,QAAQ,KAAKA,QAAQ,CAAC;QAEnEd,WAAW,CAACyB,SAAS,CAAC;QACtBvB,iBAAiB,CAACuB,SAAS,CAACG,MAAM,CAAC,CAAC,CAAC;;QAErC;QACAxB,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOyB,KAAK,EAAE;QACdN,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEK,KAAK,CAAC;MAC5C;IACF,CAAC;IACDX,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB;EACA,MAAMgB,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMtC,KAAK,CAACmD,MAAM,CAChC,kCAAiCD,EAAG,IAAGjB,QAAS,EACnD,CAAC;MAED,IAAIK,QAAQ,CAACc,MAAM,KAAK,GAAG,EAAE;QAC3BV,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;;QAExC;QACA,MAAMN,SAAS,GAAG,MAAAA,CAAA,KAAY;UAC5BK,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;UAEvC,IAAI;YACF,MAAML,QAAQ,GAAG,MAAMtC,KAAK,CAACqD,GAAG,CAC7B,uCAAsCpB,QAAS,EAClD,CAAC;YACD,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI;YAChCrB,WAAW,CAACqB,IAAI,CAAC;YACjBnB,iBAAiB,CAACmB,IAAI,CAACO,MAAM,CAAC;UAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;YACdN,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEK,KAAK,CAAC;UAC5C;QACF,CAAC;QACD;;QAEAM,eAAe,CAAC,CAAC;MACnB,CAAC,MAAM;QACLZ,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEL,QAAQ,CAACc,MAAM,CAAC;MACxD;IACF,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMO,kBAAkB,GAAG,MAAAA,CAAOL,EAAE,EAAEV,IAAI,EAAEP,QAAQ,KAAK;IACvDS,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjB,IAAI;MACF,MAAMF,QAAQ,GAAG,MAAMtC,KAAK,CAACwD,KAAK,CAC/B,kCAAiCvB,QAAS,IAAGiB,EAAG,EAAC;MAAE;MACpD;MACA;QACE,GAAGV,IAAI;QACPiB,SAAS,EAAE,CAACjB,IAAI,CAACiB,SAAS,CAAE;MAC9B,CACF,CAAC;MAED,IAAInB,QAAQ,CAACc,MAAM,KAAK,GAAG,EAAE;QAC3BV,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;QAE3C,MAAMN,SAAS,GAAG,MAAAA,CAAA,KAAY;UAC5BK,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;UAEvC,IAAI;YACF,MAAML,QAAQ,GAAG,MAAMtC,KAAK,CAACqD,GAAG,CAC9B,0CACF,CAAC;YACD,MAAMb,IAAI,GAAGF,QAAQ,CAACE,IAAI;YAC1BrB,WAAW,CAACqB,IAAI,CAAC;YACjBnB,iBAAiB,CAACmB,IAAI,CAACO,MAAM,CAAC;UAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;YACdN,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEK,KAAK,CAAC;UAC5C;QACF,CAAC;QACDM,eAAe,CAAC,CAAC;MACnB,CAAC,MAAM;QACLZ,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEL,QAAQ,CAACc,MAAM,CAAC;MAC1D;IACF,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdN,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEK,KAAK,CAAC;IAC9C;EACF,CAAC;;EAED;EACA,MAAMM,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCZ,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAEvC,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMtC,KAAK,CAACqD,GAAG,CAC7B,uCAAsCpB,QAAS,EAClD,CAAC;MACD;MACA,MAAMO,IAAI,GAAGF,QAAQ,CAACE,IAAI;MAC1BrB,WAAW,CAACqB,IAAI,CAAC;MACjBnB,iBAAiB,CAACmB,IAAI,CAACO,MAAM,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdN,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEK,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,oBACEnC,OAAA,CAAAE,SAAA;IAAA2C,QAAA,gBACE7C,OAAA,CAAC8C,mBAAmB;MAACL,eAAe,EAAEA;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzDlD,OAAA,CAACZ,KAAK,CAACa,QAAQ;MAAA4C,QAAA,EACZpC,SAAS,gBACRT,OAAA,CAACF,IAAI;QACHqD,IAAI,EAAC,MAAM;QACXC,KAAK,EAAC,SAAS;QACfC,MAAM,EAAE,GAAI;QACZC,KAAK,EAAE,GAAI;QACXC,OAAO,EAAE,IAAK,CAAC;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,gBAEFlD,OAAA;QAAA6C,QAAA,gBACE7C,OAAA;UAAKwD,SAAS,EAAC,WAAW;UAAAX,QAAA,gBACxB7C,OAAA;YAAKwD,SAAS,EAAC,kBAAkB;YAAAX,QAAA,gBAC/B7C,OAAA;cAAIqC,EAAE,EAAC,UAAU;cAAAQ,QAAA,eACf7C,OAAA;gBAAMyD,KAAK,EAAE;kBAAEC,WAAW,EAAE,MAAM;kBAAEC,QAAQ,EAAE;gBAAO,CAAE;gBAAAd,QAAA,EAAC;cAExD;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACLlD,OAAA;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAENlD,OAAA;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACNlD,OAAA;cAAIwD,SAAS,EAAC,WAAW;cAAAX,QAAA,EACtBzB,QAAQ,GACJ,UAASA,QAAS,8BAA6B,GAC/C;YAAmC;cAAA2B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtC,CAAC,eACLlD,OAAA;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENlD,OAAA;YAAKwD,SAAS,EAAC,eAAe;YAAAX,QAAA,eAC5B7C,OAAA;cAAKwD,SAAS,EAAC,iBAAiB;cAAAX,QAAA,eAC9B7C,OAAA;gBAAOwD,SAAS,EAAC,OAAO;gBAAAX,QAAA,gBACtB7C,OAAA;kBAAA6C,QAAA,eACE7C,OAAA;oBAAA6C,QAAA,gBACE7C,OAAA;sBAAA6C,QAAA,EAAI;oBAAM;sBAAAE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eACflD,OAAA;sBAAA6C,QAAA,EAAI;oBAAO;sBAAAE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAEhBlD,OAAA;sBAAA6C,QAAA,EAAI;oBAAK;sBAAAE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eACdlD,OAAA;sBAAA6C,QAAA,EAAI;oBAAM;sBAAAE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eACflD,OAAA;sBAAA6C,QAAA,EAAI;oBAAO;sBAAAE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACd;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC,eACRlD,OAAA;kBAAA+C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACNlD,OAAA;kBAAA6C,QAAA,EAEGxC,QAAQ,CAACuD,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK;kBAAA;kBAC/B;kBACA9D,OAAA;oBAAA6C,QAAA,gBACE7C,OAAA;sBAAA6C,QAAA,EAAKiB,KAAK,GAAG;oBAAC;sBAAAf,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACpBlD,OAAA;sBAAA6C,QAAA,EAAKgB,WAAW,CAACE;oBAAM;sBAAAhB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eAC7BlD,OAAA;sBAAA6C,QAAA,EAAKgB,WAAW,CAACG;oBAAK;sBAAAjB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eAC5BlD,OAAA;sBAAA6C,QAAA,eACE7C,OAAA,CAACR,QAAQ;wBACPyE,KAAK,EAAC,YAAY;wBAClBd,IAAI,EAAC,UAAU;wBACfe,IAAI,EAAC,WAAW;wBAChBC,OAAO,EAAEN,WAAW,CAACjB,SAAU;wBAC/BwB,QAAQ,EAAEA,CAAA,KACR1B,kBAAkB,CAChBmB,WAAW,CAACxB,EAAE,EACdwB,WAAW,EACXA,WAAW,CAACzC,QACd;sBACD;wBAAA2B,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACF;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACA,CAAC,eAELlD,OAAA;sBAAA6C,QAAA,gBAaE7C,OAAA,CAACL;sBACC;sBAAA;wBACA0E,OAAO,EAAEA,CAAA,KACP1D,QAAQ,CACL,SAAQkD,WAAW,CAACzC,QAAS,IAAGyC,WAAW,CAACxB,EAAG,EAClD;sBACD;wBAAAU,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACF,CAAC,oBAEF,eAAAlD,OAAA,CAACN,MAAM;wBACL2E,OAAO,EAAEA,CAAA,KAAMjC,YAAY,CAACyB,WAAW,CAACxB,EAAE;sBAAE;wBAAAU,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC7C,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACA,CAAC;kBAAA,GA7CEW,WAAW,CAACxB,EAAE;oBAAAU,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OA8CnB,CACL;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNlD,OAAA,CAAAE,SAAA;UAAA2C,QAAA,gBACE7C,OAAA;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNlD,OAAA;YAAKwD,SAAS,EAAC,aAAa;YAAAX,QAAA,gBAC1B7C,OAAA,CAACT,MAAM;cACL+E,OAAO,EAAC,WAAW;cACnBb,KAAK,EAAE;gBAAEc,eAAe,EAAE,QAAQ;gBAAEC,QAAQ,EAAE;cAAQ,CAAE;cACxDH,OAAO,EAAEhD,YAAa;cAAAwB,QAAA,EACvB;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTlD,OAAA,CAACT,MAAM;cACL+E,OAAO,EAAC;cACR;cAAA;cACAb,KAAK,EAAE;gBAAEL,KAAK,EAAE;cAAe,CAAE;cACjCf,EAAE,EAAC,SAAS;cACZgC,OAAO,EAAEA,CAAA,KAAM1D,QAAQ,CAAC,MAAM,CAAE;cAAAkC,QAAA,EACjC;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA,eACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa,CAAC;EAAA,eACjB,CAAC;AAEP;AAAC9C,EAAA,CA5QQD,QAAQ;EAAA,QAQEV,WAAW;AAAA;AAAAgF,EAAA,GARrBtE,QAAQ;AA8QjB,eAAeA,QAAQ;AAAC,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}