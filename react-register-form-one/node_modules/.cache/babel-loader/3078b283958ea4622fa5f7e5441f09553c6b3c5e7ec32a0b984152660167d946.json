{"ast":null,"code":"var _jsxFileName = \"/home/kumarprince1407/Desktop/tarams_training_projects/react-register-form-one/src/Register.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useRef, useState, useEffect } from \"react\";\n// import {faChec}\n\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"./api/axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,23}$/;\nconst PWD_REGEX = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,24}$/;\nconst Register = () => {\n  _s();\n  const userRef = useRef();\n  const errRef = useRef();\n  const [user, setUser] = useState(\"\");\n  const [validName, setValidName] = useState(false); //Boolean state to check if username is valid or not\n  const [userFocus, setUserFocus] = useState(false); //Boolean state to check if we have focus on that i/p field\n\n  const [pwd, setPwd] = useState(\"\");\n  const [validPwd, setValidPwd] = useState(false); //Boolean state to check if username is valid or not\n  const [pwdFocus, setPwdFocus] = useState(false); //Boolean state to check if we have focus on that i/p field\n\n  const [matchPwd, setMatchPwd] = useState(\"\");\n  const [validMatch, setValidMatch] = useState(false); //Boolean state to check if username is valid or not\n  const [matchFocus, setMatchFocus] = useState(false); //Boolean state to check if we have focus on that i/p field\n\n  const [errMsg, setErrorMsg] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    const result = USER_REGEX.test(user);\n    console.log(result);\n    console.log(user);\n    setValidName(result);\n  }, [user]);\n  useEffect(() => {\n    const result = PWD_REGEX.test(pwd);\n    console.log(result);\n    console.log(pwd);\n    setValidPwd(result);\n    const match = pwd === matchPwd;\n    setValidMatch(match);\n  }, [pwd, matchPwd]);\n  useEffect(() => {\n    setErrorMsg(\"\");\n  }, [user, pwd, matchPwd]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    //If button is enabled with JS hack\n    const v1 = USER_REGEX.test(user);\n    const v2 = PWD_REGEX.test(pwd);\n    if (!v1 || !v2) {\n      setErrorMsg(\"Invalid entry\");\n      return;\n    }\n    console.log(\"Username: \" + user + \" Password:\" + pwd);\n    setSuccess(true);\n\n    //Write axios try-catch block here after creating the backend\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Success!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"SignIn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: userRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validName ? \"valid\" : \"hide\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validName || !user ? \"hide\" : \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\" //should mathch the htmlFor attaribute on the label\n          ,\n          ref: userRef,\n          autoComplete: \"off\",\n          onChange: e => setUser(e.target.value),\n          required: true,\n          \"aria-invalid\": validName ? \"false\" : \"true\"\n          //This lets a screen reader whether the i/p field need to be adjusted\n          // before the form is submitted\n          ,\n          \"aria-describedby\": \"uidnote\" // It provides another element that describes the input field\n          ,\n          onFocus: () => setUserFocus(true),\n          onBlur: () => setUserFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"uidnote\",\n          className: userFocus && user && !validName ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), \"4 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), \"Must begin with a letter \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 40\n          }, this), \"Letters, numbers, underscores, hyphens allowed.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validPwd ? \"valid\" : \"hide\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validPwd || !pwd ? \"hide\" : \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\" //should mathch the htmlFor attaribute on the label\n          ,\n          autoComplete: \"off\",\n          onChange: e => setPwd(e.target.value),\n          required: true,\n          \"aria-invalid\": validPwd ? \"false\" : \"true\"\n          //This lets a screen reader whether the i/p field need to be adjusted\n          // before the form is submitted\n          ,\n          \"aria-describedby\": \"pwdnote\" // It provides another element that describes the input field\n          ,\n          onFocus: () => setPwdFocus(true),\n          onBlur: () => setPwdFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"pwdnote\",\n          className: pwdFocus && !validPwd ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), \"8 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), \"Must include uppercase and lowercasse letters, a number and a special character. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 34\n          }, this), \"Allwed special characters:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"exclamation mark\",\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"at symbol\",\n            children: \"@\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"hashtag\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"dollar sign\",\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"percentage\",\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm_pwd\",\n          children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validMatch && matchPwd ? \"valid\" : \"hide\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validMatch || !matchPwd ? \"hide\" : \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm_pwd\" //should mathch the htmlFor attaribute on the label\n          ,\n          autoComplete: \"off\",\n          onChange: e => setMatchPwd(e.target.value),\n          required: true,\n          \"aria-invalid\": validMatch ? \"false\" : \"true\"\n          //This lets a screen reader whether the i/p field need to be adjusted\n          // before the form is submitted\n          ,\n          \"aria-describedby\": \"confirmnote\" // It provides another element that describes the input field\n          ,\n          onFocus: () => setMatchFocus(true),\n          onBlur: () => setMatchFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"pwdnote\",\n          className: matchFocus && !validMatch ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), \"Must match the password input field above.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !validName || !validPwd || !validMatch ? true : false,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already registered?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"line\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Register, \"0LCAxduWhv0mlJDBUAGUULuffXA=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useRef","useState","useEffect","faCheck","faTimes","faInfoCircle","FontAwesomeIcon","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","USER_REGEX","PWD_REGEX","Register","_s","userRef","errRef","user","setUser","validName","setValidName","userFocus","setUserFocus","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrorMsg","success","setSuccess","current","focus","result","test","console","log","match","handleSubmit","e","preventDefault","v1","v2","children","fileName","_jsxFileName","lineNumber","columnNumber","href","ref","className","onSubmit","htmlFor","icon","type","id","autoComplete","onChange","target","value","required","onFocus","onBlur","disabled","_c","$RefreshReg$"],"sources":["/home/kumarprince1407/Desktop/tarams_training_projects/react-register-form-one/src/Register.jsx"],"sourcesContent":["import React from \"react\";\nimport { useRef, useState, useEffect } from \"react\";\n// import {faChec}\n\nimport {\n  faCheck,\n  faTimes,\n  faInfoCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"./api/axios\";\n\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,23}$/;\n\nconst PWD_REGEX =\n  /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,24}$/;\n\nconst Register = () => {\n  const userRef = useRef();\n  const errRef = useRef();\n\n  const [user, setUser] = useState(\"\");\n  const [validName, setValidName] = useState(false); //Boolean state to check if username is valid or not\n  const [userFocus, setUserFocus] = useState(false); //Boolean state to check if we have focus on that i/p field\n\n  const [pwd, setPwd] = useState(\"\");\n  const [validPwd, setValidPwd] = useState(false); //Boolean state to check if username is valid or not\n  const [pwdFocus, setPwdFocus] = useState(false); //Boolean state to check if we have focus on that i/p field\n\n  const [matchPwd, setMatchPwd] = useState(\"\");\n  const [validMatch, setValidMatch] = useState(false); //Boolean state to check if username is valid or not\n  const [matchFocus, setMatchFocus] = useState(false); //Boolean state to check if we have focus on that i/p field\n\n  const [errMsg, setErrorMsg] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n\n  useEffect(() => {\n    const result = USER_REGEX.test(user);\n    console.log(result);\n    console.log(user);\n    setValidName(result);\n  }, [user]);\n\n  useEffect(() => {\n    const result = PWD_REGEX.test(pwd);\n    console.log(result);\n    console.log(pwd);\n    setValidPwd(result);\n    const match = pwd === matchPwd;\n    setValidMatch(match);\n  }, [pwd, matchPwd]);\n\n  useEffect(() => {\n    setErrorMsg(\"\");\n  }, [user, pwd, matchPwd]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    //If button is enabled with JS hack\n    const v1 = USER_REGEX.test(user);\n    const v2 = PWD_REGEX.test(pwd);\n    if (!v1 || !v2) {\n      setErrorMsg(\"Invalid entry\");\n      return;\n    }\n\n    console.log(\"Username: \" + user + \" Password:\" + pwd);\n    setSuccess(true);\n\n    //Write axios try-catch block here after creating the backend\n  };\n  return (\n    <>\n      {success ? (\n        <section>\n          <h1>Success!</h1>\n          <p>\n            <a href=\"#\">SignIn</a>\n          </p>\n        </section>\n      ) : (\n        <section>\n          <p\n            ref={userRef}\n            className={errMsg ? \"errmsg\" : \"offscreen\"}\n            aria-live=\"assertive\"\n          >\n            {errMsg}\n          </p>\n          <h1>Register</h1>\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"username\">\n              Username:\n              <span className={validName ? \"valid\" : \"hide\"}>\n                <FontAwesomeIcon icon={faCheck} />\n              </span>\n              <span className={validName || !user ? \"hide\" : \"invalid\"}>\n                <FontAwesomeIcon icon={faTimes} />\n              </span>\n            </label>\n            <input\n              type=\"text\"\n              id=\"username\" //should mathch the htmlFor attaribute on the label\n              ref={userRef}\n              autoComplete=\"off\"\n              onChange={(e) => setUser(e.target.value)}\n              required\n              aria-invalid={validName ? \"false\" : \"true\"}\n              //This lets a screen reader whether the i/p field need to be adjusted\n              // before the form is submitted\n              aria-describedby=\"uidnote\" // It provides another element that describes the input field\n              onFocus={() => setUserFocus(true)}\n              onBlur={() => setUserFocus(false)}\n            />\n            <p\n              id=\"uidnote\"\n              className={\n                userFocus && user && !validName ? \"instructions\" : \"offscreen\"\n              }\n            >\n              <FontAwesomeIcon icon={faInfoCircle} />\n              4 to 24 characters.\n              <br />\n              Must begin with a letter <br />\n              Letters, numbers, underscores, hyphens allowed.\n            </p>\n            <label htmlFor=\"password\">\n              Password:\n              <span className={validPwd ? \"valid\" : \"hide\"}>\n                <FontAwesomeIcon icon={faCheck} />\n              </span>\n              <span className={validPwd || !pwd ? \"hide\" : \"invalid\"}>\n                <FontAwesomeIcon icon={faTimes} />\n              </span>\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\" //should mathch the htmlFor attaribute on the label\n              autoComplete=\"off\"\n              onChange={(e) => setPwd(e.target.value)}\n              required\n              aria-invalid={validPwd ? \"false\" : \"true\"}\n              //This lets a screen reader whether the i/p field need to be adjusted\n              // before the form is submitted\n              aria-describedby=\"pwdnote\" // It provides another element that describes the input field\n              onFocus={() => setPwdFocus(true)}\n              onBlur={() => setPwdFocus(false)}\n            />\n            <p\n              id=\"pwdnote\"\n              className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}\n            >\n              <FontAwesomeIcon icon={faInfoCircle} />\n              8 to 24 characters.\n              <br />\n              Must include uppercase and lowercasse letters, a number and a\n              special character. <br />\n              Allwed special characters:{\" \"}\n              <span aria-label=\"exclamation mark\">!</span>\n              <span aria-label=\"at symbol\">@</span>\n              <span aria-label=\"hashtag\">#</span>\n              <span aria-label=\"dollar sign\">$</span>\n              <span aria-label=\"percentage\">%</span>\n            </p>\n            <label htmlFor=\"confirm_pwd\">\n              Confirm Password:\n              <span className={validMatch && matchPwd ? \"valid\" : \"hide\"}>\n                <FontAwesomeIcon icon={faCheck} />\n              </span>\n              <span className={validMatch || !matchPwd ? \"hide\" : \"invalid\"}>\n                <FontAwesomeIcon icon={faTimes} />\n              </span>\n            </label>\n            <input\n              type=\"password\"\n              id=\"confirm_pwd\" //should mathch the htmlFor attaribute on the label\n              autoComplete=\"off\"\n              onChange={(e) => setMatchPwd(e.target.value)}\n              required\n              aria-invalid={validMatch ? \"false\" : \"true\"}\n              //This lets a screen reader whether the i/p field need to be adjusted\n              // before the form is submitted\n              aria-describedby=\"confirmnote\" // It provides another element that describes the input field\n              onFocus={() => setMatchFocus(true)}\n              onBlur={() => setMatchFocus(false)}\n            />\n            <p\n              id=\"pwdnote\"\n              className={\n                matchFocus && !validMatch ? \"instructions\" : \"offscreen\"\n              }\n            >\n              <FontAwesomeIcon icon={faInfoCircle} />\n              Must match the password input field above.\n            </p>\n            <button\n              disabled={!validName || !validPwd || !validMatch ? true : false}\n            >\n              Sign Up\n            </button>\n          </form>\n          <p>\n            Already registered?\n            <br />\n            <span className=\"line\">\n              {/* put router link here */}\n              <a href=\"#\">Sign In</a>\n            </span>\n          </p>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}