{"ast":null,"code":"var _jsxFileName = \"/home/princekumar/Desktop/Dell/tarams_training_projects/react-register-form-one/src/Register.jsx\",\n  _s = $RefreshSig$();\n//Register.jsx\nimport React from \"react\";\nimport \"./loginRegister.css\";\nimport { useRef, useState, useEffect } from \"react\";\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"./api/axios\";\nimport { useHistory, useNavigate } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,23}$/;\nconst PWD_REGEX = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,24}$/;\nconst REGISTER_URL = \"/register\";\nconst Register = () => {\n  _s();\n  const userRef = useRef();\n  const errRef = useRef();\n\n  // const history = useHistory(); //Get the history object from React Router\n\n  const [user, setUser] = useState(\"\");\n  const [validName, setValidName] = useState(false); //Boolean state to check if username is valid or not\n  const [userFocus, setUserFocus] = useState(false); //Boolean state to check if we have focus on that i/p field\n\n  const [pwd, setPwd] = useState(\"\");\n  const [validPwd, setValidPwd] = useState(false); //Boolean state to check if username is valid or not\n  const [pwdFocus, setPwdFocus] = useState(false); //Boolean state to check if we have focus on that i/p field\n\n  const [matchPwd, setMatchPwd] = useState(\"\");\n  const [validMatch, setValidMatch] = useState(false); //Boolean state to check if username is valid or not\n  const [matchFocus, setMatchFocus] = useState(false); //Boolean state to check if we have focus on that i/p field\n\n  const [errMsg, setErrorMsg] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    const result = USER_REGEX.test(user);\n    console.log(result);\n    console.log(user);\n    setValidName(result);\n  }, [user]);\n  useEffect(() => {\n    const result = PWD_REGEX.test(pwd);\n    console.log(result);\n    console.log(pwd);\n    setValidPwd(result);\n    const match = pwd === matchPwd;\n    setValidMatch(match);\n  }, [pwd, matchPwd]);\n  useEffect(() => {\n    setErrorMsg(\"\");\n  }, [user, pwd, matchPwd]);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    //If button is enabled with JS hack\n    const v1 = USER_REGEX.test(user);\n    const v2 = PWD_REGEX.test(pwd);\n    if (!v1 || !v2) {\n      setErrorMsg(\"Invalid entry\");\n      return;\n    }\n    console.log(\"Username: \" + user + \" Password:\" + pwd);\n    try {\n      // Make a POST request to the registration endpoint\n      const response = await fetch(\"http://localhost:3500/register\", {\n        // const response = await fetch(\"/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: user,\n          password: pwd\n        })\n      });\n      if (response.ok) {\n        setSuccess(true);\n\n        //Redirect to the user's homepage after successful registration\n        //  history.push(`/home/${user}`);\n        //navigate(`/home/${user}`);\n        navigate(`/`);\n      } else {\n        const data = await response.json();\n        setErrorMsg(data.message || \"Registration failed\");\n      }\n    } catch (error) {\n      setErrorMsg(\"Registration failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginContainer2\",\n        children: success ? /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Success!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              children: \"SignIn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            ref: userRef,\n            className: errMsg ? \"errmsg\" : \"offscreen\",\n            \"aria-live\": \"assertive\",\n            children: errMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: validName ? \"valid\" : \"hide\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCheck\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: validName || !user ? \"hide\" : \"invalid\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTimes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\" //should mathch the htmlFor attaribute on the label\n              ,\n              ref: userRef,\n              autoComplete: \"off\",\n              onChange: e => setUser(e.target.value),\n              required: true,\n              \"aria-invalid\": validName ? \"false\" : \"true\"\n              //This lets a screen reader whether the i/p field need to be adjusted\n              // before the form is submitted\n              ,\n              \"aria-describedby\": \"uidnote\" // It provides another element that describes the input field\n              ,\n              onFocus: () => setUserFocus(true),\n              onBlur: () => setUserFocus(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"uidnote\",\n              className: userFocus && user && !validName ? \"instructions\" : \"offscreen\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faInfoCircle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this), \"4 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), \"Must begin with a letter \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 44\n              }, this), \"Letters, numbers, underscores, hyphens allowed.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: validPwd ? \"valid\" : \"hide\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCheck\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: validPwd || !pwd ? \"hide\" : \"invalid\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTimes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\" //should mathch the htmlFor attaribute on the label\n              ,\n              autoComplete: \"off\",\n              onChange: e => setPwd(e.target.value),\n              required: true,\n              \"aria-invalid\": validPwd ? \"false\" : \"true\"\n              //This lets a screen reader whether the i/p field need to be adjusted\n              // before the form is submitted\n              ,\n              \"aria-describedby\": \"pwdnote\" // It provides another element that describes the input field\n              ,\n              onFocus: () => setPwdFocus(true),\n              onBlur: () => setPwdFocus(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"pwdnote\",\n              className: pwdFocus && !validPwd ? \"instructions\" : \"offscreen\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faInfoCircle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), \"8 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), \"Must include uppercase and lowercasse letters, a number and a special character. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 38\n              }, this), \"Allwed special characters:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-label\": \"exclamation mark\",\n                children: \"!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-label\": \"at symbol\",\n                children: \"@\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-label\": \"hashtag\",\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-label\": \"dollar sign\",\n                children: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-label\": \"percentage\",\n                children: \"%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirm_pwd\",\n              children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: validMatch && matchPwd ? \"valid\" : \"hide\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCheck\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: validMatch || !matchPwd ? \"hide\" : \"invalid\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTimes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirm_pwd\" //should mathch the htmlFor attaribute on the label\n              ,\n              autoComplete: \"off\",\n              onChange: e => setMatchPwd(e.target.value),\n              required: true,\n              \"aria-invalid\": validMatch ? \"false\" : \"true\"\n              //This lets a screen reader whether the i/p field need to be adjusted\n              // before the form is submitted\n              ,\n              \"aria-describedby\": \"confirmnote\" // It provides another element that describes the input field\n              ,\n              onFocus: () => setMatchFocus(true),\n              onBlur: () => setMatchFocus(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"pwdnote\",\n              className: matchFocus && !validMatch ? \"instructions\" : \"offscreen\",\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faInfoCircle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this), \"Must match the password input field above.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: !validName || !validPwd || !validMatch ? true : false,\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Already registered?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"line\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/\",\n                children: \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Register, \"zULpURI0UIxKWSLdCA7DTRLEyCQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useRef","useState","useEffect","faCheck","faTimes","faInfoCircle","FontAwesomeIcon","axios","useHistory","useNavigate","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","USER_REGEX","PWD_REGEX","REGISTER_URL","Register","_s","userRef","errRef","user","setUser","validName","setValidName","userFocus","setUserFocus","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrorMsg","success","setSuccess","current","focus","result","test","console","log","match","navigate","handleSubmit","e","preventDefault","v1","v2","response","fetch","method","headers","body","JSON","stringify","username","password","ok","data","json","message","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","href","ref","onSubmit","htmlFor","icon","type","id","autoComplete","onChange","target","value","required","onFocus","onBlur","disabled","_c","$RefreshReg$"],"sources":["/home/princekumar/Desktop/Dell/tarams_training_projects/react-register-form-one/src/Register.jsx"],"sourcesContent":["//Register.jsx\nimport React from \"react\";\nimport \"./loginRegister.css\";\nimport { useRef, useState, useEffect } from \"react\";\n\nimport {\n  faCheck,\n  faTimes,\n  faInfoCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"./api/axios\";\nimport { useHistory, useNavigate } from \"react-router-dom\";\n\nimport Login from \"./Login\";\n\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,23}$/;\n\nconst PWD_REGEX =\n  /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,24}$/;\n\nconst REGISTER_URL = \"/register\";\n\nconst Register = () => {\n  const userRef = useRef();\n  const errRef = useRef();\n\n  // const history = useHistory(); //Get the history object from React Router\n\n  const [user, setUser] = useState(\"\");\n  const [validName, setValidName] = useState(false); //Boolean state to check if username is valid or not\n  const [userFocus, setUserFocus] = useState(false); //Boolean state to check if we have focus on that i/p field\n\n  const [pwd, setPwd] = useState(\"\");\n  const [validPwd, setValidPwd] = useState(false); //Boolean state to check if username is valid or not\n  const [pwdFocus, setPwdFocus] = useState(false); //Boolean state to check if we have focus on that i/p field\n\n  const [matchPwd, setMatchPwd] = useState(\"\");\n  const [validMatch, setValidMatch] = useState(false); //Boolean state to check if username is valid or not\n  const [matchFocus, setMatchFocus] = useState(false); //Boolean state to check if we have focus on that i/p field\n\n  const [errMsg, setErrorMsg] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n\n  useEffect(() => {\n    const result = USER_REGEX.test(user);\n    console.log(result);\n    console.log(user);\n    setValidName(result);\n  }, [user]);\n\n  useEffect(() => {\n    const result = PWD_REGEX.test(pwd);\n    console.log(result);\n    console.log(pwd);\n    setValidPwd(result);\n    const match = pwd === matchPwd;\n    setValidMatch(match);\n  }, [pwd, matchPwd]);\n\n  useEffect(() => {\n    setErrorMsg(\"\");\n  }, [user, pwd, matchPwd]);\n\n  const navigate = useNavigate();\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    //If button is enabled with JS hack\n    const v1 = USER_REGEX.test(user);\n    const v2 = PWD_REGEX.test(pwd);\n    if (!v1 || !v2) {\n      setErrorMsg(\"Invalid entry\");\n      return;\n    }\n\n    console.log(\"Username: \" + user + \" Password:\" + pwd);\n\n    try {\n      // Make a POST request to the registration endpoint\n      const response = await fetch(\"http://localhost:3500/register\", {\n        // const response = await fetch(\"/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ username: user, password: pwd }),\n      });\n\n      if (response.ok) {\n        setSuccess(true);\n\n        //Redirect to the user's homepage after successful registration\n        //  history.push(`/home/${user}`);\n        //navigate(`/home/${user}`);\n        navigate(`/`);\n      } else {\n        const data = await response.json();\n        setErrorMsg(data.message || \"Registration failed\");\n      }\n    } catch (error) {\n      setErrorMsg(\"Registration failed\");\n    }\n  };\n  return (\n    <>\n      <div className=\"loginContainer\">\n        <div className=\"loginContainer2\">\n          {success ? (\n            <section>\n              <h1>Success!</h1>\n              <p>\n                <a href=\"/\">SignIn</a>\n                {/* Remove the link to the general sign-in page */}\n              </p>\n            </section>\n          ) : (\n            <section>\n              <p\n                ref={userRef}\n                className={errMsg ? \"errmsg\" : \"offscreen\"}\n                aria-live=\"assertive\"\n              >\n                {errMsg}\n              </p>\n              <h1>Register</h1>\n              <form onSubmit={handleSubmit}>\n                <label htmlFor=\"username\">\n                  Username:\n                  <span className={validName ? \"valid\" : \"hide\"}>\n                    <FontAwesomeIcon icon={faCheck} />\n                  </span>\n                  <span className={validName || !user ? \"hide\" : \"invalid\"}>\n                    <FontAwesomeIcon icon={faTimes} />\n                  </span>\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"username\" //should mathch the htmlFor attaribute on the label\n                  ref={userRef}\n                  autoComplete=\"off\"\n                  onChange={(e) => setUser(e.target.value)}\n                  required\n                  aria-invalid={validName ? \"false\" : \"true\"}\n                  //This lets a screen reader whether the i/p field need to be adjusted\n                  // before the form is submitted\n                  aria-describedby=\"uidnote\" // It provides another element that describes the input field\n                  onFocus={() => setUserFocus(true)}\n                  onBlur={() => setUserFocus(false)}\n                />\n                <p\n                  id=\"uidnote\"\n                  className={\n                    userFocus && user && !validName\n                      ? \"instructions\"\n                      : \"offscreen\"\n                  }\n                >\n                  <FontAwesomeIcon icon={faInfoCircle} />\n                  4 to 24 characters.\n                  <br />\n                  Must begin with a letter <br />\n                  Letters, numbers, underscores, hyphens allowed.\n                </p>\n                <br />\n                <label htmlFor=\"password\">\n                  Password:\n                  <span className={validPwd ? \"valid\" : \"hide\"}>\n                    <FontAwesomeIcon icon={faCheck} />\n                  </span>\n                  <span className={validPwd || !pwd ? \"hide\" : \"invalid\"}>\n                    <FontAwesomeIcon icon={faTimes} />\n                  </span>\n                </label>\n                <input\n                  type=\"password\"\n                  id=\"password\" //should mathch the htmlFor attaribute on the label\n                  autoComplete=\"off\"\n                  onChange={(e) => setPwd(e.target.value)}\n                  required\n                  aria-invalid={validPwd ? \"false\" : \"true\"}\n                  //This lets a screen reader whether the i/p field need to be adjusted\n                  // before the form is submitted\n                  aria-describedby=\"pwdnote\" // It provides another element that describes the input field\n                  onFocus={() => setPwdFocus(true)}\n                  onBlur={() => setPwdFocus(false)}\n                />\n                <p\n                  id=\"pwdnote\"\n                  className={\n                    pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"\n                  }\n                >\n                  <FontAwesomeIcon icon={faInfoCircle} />\n                  8 to 24 characters.\n                  <br />\n                  Must include uppercase and lowercasse letters, a number and a\n                  special character. <br />\n                  Allwed special characters:{\" \"}\n                  <span aria-label=\"exclamation mark\">!</span>\n                  <span aria-label=\"at symbol\">@</span>\n                  <span aria-label=\"hashtag\">#</span>\n                  <span aria-label=\"dollar sign\">$</span>\n                  <span aria-label=\"percentage\">%</span>\n                </p>\n                <br />\n                <label htmlFor=\"confirm_pwd\">\n                  Confirm Password:\n                  <span className={validMatch && matchPwd ? \"valid\" : \"hide\"}>\n                    <FontAwesomeIcon icon={faCheck} />\n                  </span>\n                  <span\n                    className={validMatch || !matchPwd ? \"hide\" : \"invalid\"}\n                  >\n                    <FontAwesomeIcon icon={faTimes} />\n                  </span>\n                </label>\n                <input\n                  type=\"password\"\n                  id=\"confirm_pwd\" //should mathch the htmlFor attaribute on the label\n                  autoComplete=\"off\"\n                  onChange={(e) => setMatchPwd(e.target.value)}\n                  required\n                  aria-invalid={validMatch ? \"false\" : \"true\"}\n                  //This lets a screen reader whether the i/p field need to be adjusted\n                  // before the form is submitted\n                  aria-describedby=\"confirmnote\" // It provides another element that describes the input field\n                  onFocus={() => setMatchFocus(true)}\n                  onBlur={() => setMatchFocus(false)}\n                />\n                <p\n                  id=\"pwdnote\"\n                  className={\n                    matchFocus && !validMatch ? \"instructions\" : \"offscreen\"\n                  }\n                >\n                  <FontAwesomeIcon icon={faInfoCircle} />\n                  Must match the password input field above.\n                </p>\n                <br />\n                <button\n                  disabled={\n                    !validName || !validPwd || !validMatch ? true : false\n                  }\n                >\n                  Sign Up\n                </button>\n              </form>\n              <p>\n                Already registered?\n                <br />\n                <span className=\"line\">\n                  {/* put router link here */}\n                  <a href=\"/\">Sign In</a>\n                </span>\n              </p>\n            </section>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}