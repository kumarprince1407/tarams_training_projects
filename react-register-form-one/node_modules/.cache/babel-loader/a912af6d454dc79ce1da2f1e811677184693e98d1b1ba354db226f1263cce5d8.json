{"ast":null,"code":"var _jsxFileName = \"/home/princekumar/Desktop/Dell/tarams_training_projects/react-register-form-one/src/ToDoFunctionalities.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./style.css\";\nimport { Button, InputBase } from \"@mui/material\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ToDoFunctionalities() {\n  _s();\n  const {\n    id,\n    username\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [userInput, setUserInput] = useState({\n    userid: \"\",\n    title: \"\",\n    completed: false\n  });\n\n  //State for form validation\n  const [formValid, setFormValid] = useState(true);\n\n  //Extract the username from the token stored in local storage\n  const token = localStorage.getItem(\"accessToken\"); //It retrives the value associated with the key\n  //\"accessToken\" from the browser's local storage & stores it in the variable named \"token\"\n  const decodedToken = token ? JSON.parse(atob(token.split(\".\")[1])) : null;\n  //token.split(\".\")[1] splits the token into an array using the dot('.') as a separator and selects\n  //2nd element (index 1) of the resulting array\n\n  //Get the username from the decoded token\n  // const username = decodedToken ? decodedToken.username : null;\n\n  //Create a ref for TextInput field\n  const titleInputRef = useRef(null);\n  useEffect(() => {\n    // Fetch data if editing a task\n    if (location.pathname.startsWith(\"/edit\")) {\n      fetchData();\n    }\n  }, [location]);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3002/todolist/${username}/${id}`);\n      const data = response.data;\n      setUserInput({\n        userid: data.userid,\n        title: data.title,\n        completed: data.completed\n      });\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    const inputValue = type === \"checkbox\" ? checked : value;\n    setUserInput(prevState => ({\n      ...prevState,\n      [name]: inputValue\n    }));\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    const newItem = {\n      ...userInput,\n      username: username\n    };\n    try {\n      let response;\n      if (location.pathname.startsWith(\"/edit\")) {\n        response = await axios.patch(`http://localhost:3002/todolist/${username}/${id}`, newItem);\n      } else {\n        response = await axios.post(`http://localhost:3002/todolist/${username}`, newItem);\n      }\n      if (response.status === 200) {\n        console.log(\"Data sent successfully\");\n        navigate(`/home/${username}`);\n      } else {\n        console.error(\"Failed to send data:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"Error sending data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          id: \"heading2\",\n          children: location.pathname.startsWith(\"/edit\") ? \"Update Task Details\" : \"Enter new Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleFormSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"textarea1\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: location.pathname.startsWith(\"/edit\") ? \"Update task ID\" : \"Task ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"inputfield\",\n              type: \"text\",\n              name: \"userid\",\n              value: userInput.userid,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"textarea3\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: location.pathname.startsWith(\"/edit\") ? \"Update task details\" : \"Task details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"inputfield\",\n              type: \"text\",\n              name: \"title\",\n              value: userInput.title,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: location.pathname.startsWith(\"/edit\") ? \"Update & Save\" : \"Add New Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(ToDoFunctionalities, \"9if092p3sUZuJe0LGpHZnIAD/xE=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = ToDoFunctionalities;\nexport default ToDoFunctionalities;\nvar _c;\n$RefreshReg$(_c, \"ToDoFunctionalities\");","map":{"version":3,"names":["React","axios","useEffect","useState","useRef","useLocation","Button","InputBase","useNavigate","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDoFunctionalities","_s","id","username","location","navigate","userInput","setUserInput","userid","title","completed","formValid","setFormValid","token","localStorage","getItem","decodedToken","JSON","parse","atob","split","titleInputRef","pathname","startsWith","fetchData","response","get","data","error","console","handleInputChange","e","name","value","type","checked","target","inputValue","prevState","handleFormSubmit","preventDefault","newItem","patch","post","status","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","_c","$RefreshReg$"],"sources":["/home/princekumar/Desktop/Dell/tarams_training_projects/react-register-form-one/src/ToDoFunctionalities.jsx"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./style.css\";\nimport { Button, InputBase } from \"@mui/material\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nfunction ToDoFunctionalities() {\n  const { id, username } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [userInput, setUserInput] = useState({\n    userid: \"\",\n    title: \"\",\n    completed: false,\n  });\n\n  //State for form validation\n  const [formValid, setFormValid] = useState(true);\n\n  //Extract the username from the token stored in local storage\n  const token = localStorage.getItem(\"accessToken\"); //It retrives the value associated with the key\n  //\"accessToken\" from the browser's local storage & stores it in the variable named \"token\"\n  const decodedToken = token ? JSON.parse(atob(token.split(\".\")[1])) : null;\n  //token.split(\".\")[1] splits the token into an array using the dot('.') as a separator and selects\n  //2nd element (index 1) of the resulting array\n\n  //Get the username from the decoded token\n  // const username = decodedToken ? decodedToken.username : null;\n\n  //Create a ref for TextInput field\n  const titleInputRef = useRef(null);\n\n  useEffect(() => {\n    // Fetch data if editing a task\n    if (location.pathname.startsWith(\"/edit\")) {\n      fetchData();\n    }\n  }, [location]);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\n        `http://localhost:3002/todolist/${username}/${id}`\n      );\n      const data = response.data;\n      setUserInput({\n        userid: data.userid,\n        title: data.title,\n        completed: data.completed,\n      });\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    const inputValue = type === \"checkbox\" ? checked : value;\n\n    setUserInput((prevState) => ({\n      ...prevState,\n      [name]: inputValue,\n    }));\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n\n    const newItem = {\n      ...userInput,\n      username: username,\n    };\n\n    try {\n      let response;\n      if (location.pathname.startsWith(\"/edit\")) {\n        response = await axios.patch(\n          `http://localhost:3002/todolist/${username}/${id}`,\n          newItem\n        );\n      } else {\n        response = await axios.post(\n          `http://localhost:3002/todolist/${username}`,\n          newItem\n        );\n      }\n\n      if (response.status === 200) {\n        console.log(\"Data sent successfully\");\n\n        navigate(`/home/${username}`);\n      } else {\n        console.error(\"Failed to send data:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"Error sending data:\", error);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"mainContainer\">\n        <div className=\"inputForm\">\n          <h3 id=\"heading2\">\n            {location.pathname.startsWith(\"/edit\")\n              ? \"Update Task Details\"\n              : \"Enter new Task\"}\n          </h3>\n\n          <form onSubmit={handleFormSubmit}>\n            <label htmlFor=\"textarea1\">\n              <br />\n              <p>\n                {location.pathname.startsWith(\"/edit\")\n                  ? \"Update task ID\"\n                  : \"Task ID\"}\n              </p>\n              <input\n                className=\"inputfield\"\n                type=\"text\"\n                name=\"userid\"\n                value={userInput.userid}\n                onChange={handleInputChange}\n              />\n            </label>\n            <br />\n            <br />\n            <label htmlFor=\"textarea3\">\n              <br />\n              <p>\n                {location.pathname.startsWith(\"/edit\")\n                  ? \"Update task details\"\n                  : \"Task details\"}\n              </p>\n              <input\n                className=\"inputfield\"\n                type=\"text\"\n                name=\"title\"\n                value={userInput.title}\n                onChange={handleInputChange}\n              />\n            </label>\n            <br />\n            <br />\n            <div className=\"buttonContainer\">\n              <button type=\"submit\">\n                {location.pathname.startsWith(\"/edit\")\n                  ? \"Update & Save\"\n                  : \"Add New Task\"}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ToDoFunctionalities;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}