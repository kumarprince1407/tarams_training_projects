{"ast":null,"code":"var _jsxFileName = \"/home/princekumar/Desktop/Dell/tarams_training_projects/react-register-form-one/src/ToDoFunctionalities.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./styles.css\";\nimport { Button, InputBase } from \"@mui/material\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ToDoFunctionalities() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [userInput, setUserInput] = useState({\n    userid: \"\",\n    title: \"\",\n    completed: false\n  });\n\n  //State for form validation\n  const [formValid, setFormValid] = useState(true);\n\n  //Extract the username from the token stored in local storage\n  const token = localStorage.getItem(\"accessToken\"); //It retrives the value associated with the key\n  //\"accessToken\" from the browser's local storage & stores it in the variable named \"token\"\n  const decodedToken = token ? JSON.parse(atob(token.split(\".\")[1])) : null;\n  //token.split(\".\")[1] splits the token into an array using the dot('.') as a separator and selects\n  //2nd element (index 1) of the resulting array\n\n  //Get the username from the decoded token\n  const username = decodedToken ? decodedToken.username : null;\n\n  //Create a ref for TextInput field\n  const titleInputRef = useRef(null);\n  useEffect(() => {\n    if (id) {\n      fetchTaskData(id);\n    }\n  }, [id]);\n  const fetchTaskData = async taskId => {\n    try {\n      const response = await axios.get(`http://localhost:3002/todolist/${taskId}`);\n      const data = response.data;\n      setUserInput(data);\n    } catch (error) {\n      console.log(\"Error fetching task data:\", error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    const inputValue = type === \"checkbox\" ? checked : value;\n    setUserInput(prevState => ({\n      ...prevState,\n      [name]: inputValue\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (id) {\n        //Editing existing task\n        await axios.patch(`http://localhost:3002/todolist/${id}`, userInput);\n      } else {\n        //Adding a new task\n        await axios.post(`https://localhost:3002/todolist`, userInput);\n      }\n      navigate(\"/home\"); //Redirect to homepage after successful submission\n    } catch (error) {\n      console.log(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-functionalities\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: id ? \"Edit Task\" : \"Add new Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Task ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"userid\",\n            value: userInput.userid,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Task Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            value: userInput.title,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: id ? \"Update & Save\" : \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(ToDoFunctionalities, \"81KjZ5ZvBS1e6IKOnmAxZY7KBjI=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = ToDoFunctionalities;\nexport default ToDoFunctionalities;\nvar _c;\n$RefreshReg$(_c, \"ToDoFunctionalities\");","map":{"version":3,"names":["React","axios","useEffect","useState","useRef","useLocation","Button","InputBase","useNavigate","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDoFunctionalities","_s","id","location","navigate","userInput","setUserInput","userid","title","completed","formValid","setFormValid","token","localStorage","getItem","decodedToken","JSON","parse","atob","split","username","titleInputRef","fetchTaskData","taskId","response","get","data","error","console","log","handleInputChange","e","name","value","type","checked","target","inputValue","prevState","handleSubmit","preventDefault","patch","post","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","_c","$RefreshReg$"],"sources":["/home/princekumar/Desktop/Dell/tarams_training_projects/react-register-form-one/src/ToDoFunctionalities.jsx"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./styles.css\";\nimport { Button, InputBase } from \"@mui/material\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nfunction ToDoFunctionalities() {\n  const { id } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [userInput, setUserInput] = useState({\n    userid: \"\",\n    title: \"\",\n    completed: false,\n  });\n\n  //State for form validation\n  const [formValid, setFormValid] = useState(true);\n\n  //Extract the username from the token stored in local storage\n  const token = localStorage.getItem(\"accessToken\"); //It retrives the value associated with the key\n  //\"accessToken\" from the browser's local storage & stores it in the variable named \"token\"\n  const decodedToken = token ? JSON.parse(atob(token.split(\".\")[1])) : null;\n  //token.split(\".\")[1] splits the token into an array using the dot('.') as a separator and selects\n  //2nd element (index 1) of the resulting array\n\n  //Get the username from the decoded token\n  const username = decodedToken ? decodedToken.username : null;\n\n  //Create a ref for TextInput field\n  const titleInputRef = useRef(null);\n\n  useEffect(() => {\n    if (id) {\n      fetchTaskData(id);\n    }\n  }, [id]);\n\n  const fetchTaskData = async (taskId) => {\n    try {\n      const response = await axios.get(\n        `http://localhost:3002/todolist/${taskId}`\n      );\n      const data = response.data;\n      setUserInput(data);\n    } catch (error) {\n      console.log(\"Error fetching task data:\", error);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    const inputValue = type === \"checkbox\" ? checked : value;\n\n    setUserInput((prevState) => ({\n      ...prevState,\n      [name]: inputValue,\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      if (id) {\n        //Editing existing task\n        await axios.patch(`http://localhost:3002/todolist/${id}`, userInput);\n      } else {\n        //Adding a new task\n        await axios.post(`https://localhost:3002/todolist`, userInput);\n      }\n      navigate(\"/home\"); //Redirect to homepage after successful submission\n    } catch (error) {\n      console.log(\"Error:\", error);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"todo-functionalities\">\n        <h1>{id ? \"Edit Task\" : \"Add new Task\"}</h1>\n        <form onSubmit={handleSubmit}>\n          <label>\n            Task ID:\n            <input\n              type=\"text\"\n              name=\"userid\"\n              value={userInput.userid}\n              onChange={handleInputChange}\n            />\n          </label>\n          <label>\n            Task Title:\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={userInput.title}\n              onChange={handleInputChange}\n            />\n          </label>\n          <button type=\"submit\">{id ? \"Update & Save\" : \"Add Task\"}</button>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default ToDoFunctionalities;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}