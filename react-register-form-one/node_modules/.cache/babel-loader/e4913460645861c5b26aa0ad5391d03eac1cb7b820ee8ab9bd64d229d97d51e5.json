{"ast":null,"code":"var _jsxFileName = \"/home/kumarprince1407/Desktop/tarams_training_projects/react-register-form-one/src/Register.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useRef, useState, useEffect } from \"react\";\n// import {faChec}\n\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n// const USER_REGEX = /^[a-zA-Z][a-zA-Z0-z)-9-_]{3,23}$/;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,23}$/;\nconst PWD_REGEX = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,24}$/;\nconst Register = () => {\n  _s();\n  const userRef = useRef();\n  const errRef = useRef();\n  const [user, setUser] = useState(\"\");\n  const [validName, setValidName] = useState(false); //Boolean state to check if username is valid or not\n  const [userFocus, setUserFocus] = useState(false); //Boolean state to check if we have focus on that i/p field\n\n  const [pwd, setPwd] = useState(\"\");\n  const [validPwd, setValidPwd] = useState(false); //Boolean state to check if username is valid or not\n  const [pwdFocus, setPwdFocus] = useState(false); //Boolean state to check if we have focus on that i/p field\n\n  const [matchPwd, setMatchPwd] = useState(\"\");\n  const [validMatch, setValidMatch] = useState(false); //Boolean state to check if username is valid or not\n  const [matchFocus, setMatchFocus] = useState(false); //Boolean state to check if we have focus on that i/p field\n\n  const [errMsg, setErrorMsg] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    const result = USER_REGEX.test(user);\n    console.log(result);\n    console.log(user);\n    setValidName(result);\n  }, [user]);\n  useEffect(() => {\n    const result = PWD_REGEX.test(pwd);\n    console.log(result);\n    console.log(pwd);\n    setValidPwd(result);\n    const match = pwd === matchPwd;\n    setValidMatch(match);\n  }, [pwd, matchPwd]);\n  useEffect(() => {\n    setErrorMsg(\"\");\n  }, [user, pwd, matchPwd]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      ref: userRef,\n      className: errMsg ? \"errmsg\" : \"offscreen\",\n      \"aria-live\": \"assertive\",\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validName ? \"valid\" : \"hide\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validName || !user ? \"hide\" : \"invalid\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\" //should mathch the htmlFor attaribute on the label\n        ,\n        ref: userRef,\n        autoComplete: \"off\",\n        onChange: e => setUser(e.target.value),\n        required: true,\n        \"aria-invalid\": validName ? \"false\" : \"true\"\n        //This lets a screen reader whether the i/p field need to be adjusted\n        // before the form is submitted\n        ,\n        \"aria-describedby\": \"uidnote\" // It provides another element that describes the input field\n        ,\n        onFocus: () => setUserFocus(true),\n        onBlur: () => setUserFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"uidnote\",\n        className: userFocus && user && !validName ? \"instructions\" : \"offscreen\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), \"4 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), \"Must begin with a letter \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 36\n        }, this), \"Letters, numbers, underscores, hyphens allowed.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validPwd ? \"valid\" : \"hide\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validPwd || !pwd ? \"hide\" : \"invalid\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\" //should mathch the htmlFor attaribute on the label\n        ,\n        autoComplete: \"off\",\n        onChange: e => setPwd(e.target.value),\n        required: true,\n        \"aria-invalid\": validPwd ? \"false\" : \"true\"\n        //This lets a screen reader whether the i/p field need to be adjusted\n        // before the form is submitted\n        ,\n        \"aria-describedby\": \"pwdnote\" // It provides another element that describes the input field\n        ,\n        onFocus: () => setPwdFocus(true),\n        onBlur: () => setPwdFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"pwdnote\",\n        className: pwdFocus && !validPwd ? \"instructions\" : \"offscreen\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), \"8 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), \"Must include uppercase and lowercasse letters, a number and a special character. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 22\n        }, this), \"Allwed special characters:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-label\": \"exclamation mark\",\n          children: \"!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-label\": \"at symbol\",\n          children: \"@\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-label\": \"hashtag\",\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-label\": \"dollar sign\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-label\": \"percentage\",\n          children: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirm_pwd\",\n        children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validMatch && matchPwd ? \"valid\" : \"hide\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: validMatch || !matchPwd ? \"hide\" : \"invalid\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"confirm_pwd\" //should mathch the htmlFor attaribute on the label\n        ,\n        autoComplete: \"off\",\n        onChange: e => setMatchPwd(e.target.value),\n        required: true,\n        \"aria-invalid\": validMatch ? \"false\" : \"true\"\n        //This lets a screen reader whether the i/p field need to be adjusted\n        // before the form is submitted\n        ,\n        \"aria-describedby\": \"confirmnote\" // It provides another element that describes the input field\n        ,\n        onFocus: () => setMatchFocus(true),\n        onBlur: () => setMatchFocus(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"pwdnote\",\n        className: matchFocus && !validMatch ? \"instructions\" : \"offscreen\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), \"Must match the password input field above.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !validName || !validPwd || !validMatch ? true : false,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already registered?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"line\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"0LCAxduWhv0mlJDBUAGUULuffXA=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useRef","useState","useEffect","faCheck","faTimes","faInfoCircle","FontAwesomeIcon","jsxDEV","_jsxDEV","USER_REGEX","PWD_REGEX","Register","_s","userRef","errRef","user","setUser","validName","setValidName","userFocus","setUserFocus","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrorMsg","success","setSuccess","current","focus","result","test","console","log","match","handleSubmit","e","preventDefault","children","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","icon","type","id","autoComplete","onChange","target","value","required","onFocus","onBlur","disabled","href","_c","$RefreshReg$"],"sources":["/home/kumarprince1407/Desktop/tarams_training_projects/react-register-form-one/src/Register.jsx"],"sourcesContent":["import React from \"react\";\nimport { useRef, useState, useEffect } from \"react\";\n// import {faChec}\n\nimport {\n  faCheck,\n  faTimes,\n  faInfoCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n// const USER_REGEX = /^[a-zA-Z][a-zA-Z0-z)-9-_]{3,23}$/;\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,23}$/;\n\nconst PWD_REGEX =\n  /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,24}$/;\n\nconst Register = () => {\n  const userRef = useRef();\n  const errRef = useRef();\n\n  const [user, setUser] = useState(\"\");\n  const [validName, setValidName] = useState(false); //Boolean state to check if username is valid or not\n  const [userFocus, setUserFocus] = useState(false); //Boolean state to check if we have focus on that i/p field\n\n  const [pwd, setPwd] = useState(\"\");\n  const [validPwd, setValidPwd] = useState(false); //Boolean state to check if username is valid or not\n  const [pwdFocus, setPwdFocus] = useState(false); //Boolean state to check if we have focus on that i/p field\n\n  const [matchPwd, setMatchPwd] = useState(\"\");\n  const [validMatch, setValidMatch] = useState(false); //Boolean state to check if username is valid or not\n  const [matchFocus, setMatchFocus] = useState(false); //Boolean state to check if we have focus on that i/p field\n\n  const [errMsg, setErrorMsg] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n\n  useEffect(() => {\n    const result = USER_REGEX.test(user);\n    console.log(result);\n    console.log(user);\n    setValidName(result);\n  }, [user]);\n\n  useEffect(() => {\n    const result = PWD_REGEX.test(pwd);\n    console.log(result);\n    console.log(pwd);\n    setValidPwd(result);\n    const match = pwd === matchPwd;\n    setValidMatch(match);\n  }, [pwd, matchPwd]);\n\n  useEffect(() => {\n    setErrorMsg(\"\");\n  }, [user, pwd, matchPwd]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n  };\n  return (\n    <section>\n      <p\n        ref={userRef}\n        className={errMsg ? \"errmsg\" : \"offscreen\"}\n        aria-live=\"assertive\"\n      >\n        {errMsg}\n      </p>\n      <h1>Register</h1>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"username\">\n          Username:\n          <span className={validName ? \"valid\" : \"hide\"}>\n            <FontAwesomeIcon icon={faCheck} />\n          </span>\n          <span className={validName || !user ? \"hide\" : \"invalid\"}>\n            <FontAwesomeIcon icon={faTimes} />\n          </span>\n        </label>\n        <input\n          type=\"text\"\n          id=\"username\" //should mathch the htmlFor attaribute on the label\n          ref={userRef}\n          autoComplete=\"off\"\n          onChange={(e) => setUser(e.target.value)}\n          required\n          aria-invalid={validName ? \"false\" : \"true\"}\n          //This lets a screen reader whether the i/p field need to be adjusted\n          // before the form is submitted\n          aria-describedby=\"uidnote\" // It provides another element that describes the input field\n          onFocus={() => setUserFocus(true)}\n          onBlur={() => setUserFocus(false)}\n        />\n        <p\n          id=\"uidnote\"\n          className={\n            userFocus && user && !validName ? \"instructions\" : \"offscreen\"\n          }\n        >\n          <FontAwesomeIcon icon={faInfoCircle} />\n          4 to 24 characters.\n          <br />\n          Must begin with a letter <br />\n          Letters, numbers, underscores, hyphens allowed.\n        </p>\n        <label htmlFor=\"password\">\n          Password:\n          <span className={validPwd ? \"valid\" : \"hide\"}>\n            <FontAwesomeIcon icon={faCheck} />\n          </span>\n          <span className={validPwd || !pwd ? \"hide\" : \"invalid\"}>\n            <FontAwesomeIcon icon={faTimes} />\n          </span>\n        </label>\n        <input\n          type=\"password\"\n          id=\"password\" //should mathch the htmlFor attaribute on the label\n          autoComplete=\"off\"\n          onChange={(e) => setPwd(e.target.value)}\n          required\n          aria-invalid={validPwd ? \"false\" : \"true\"}\n          //This lets a screen reader whether the i/p field need to be adjusted\n          // before the form is submitted\n          aria-describedby=\"pwdnote\" // It provides another element that describes the input field\n          onFocus={() => setPwdFocus(true)}\n          onBlur={() => setPwdFocus(false)}\n        />\n        <p\n          id=\"pwdnote\"\n          className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}\n        >\n          <FontAwesomeIcon icon={faInfoCircle} />\n          8 to 24 characters.\n          <br />\n          Must include uppercase and lowercasse letters, a number and a special\n          character. <br />\n          Allwed special characters:{\" \"}\n          <span aria-label=\"exclamation mark\">!</span>\n          <span aria-label=\"at symbol\">@</span>\n          <span aria-label=\"hashtag\">#</span>\n          <span aria-label=\"dollar sign\">$</span>\n          <span aria-label=\"percentage\">%</span>\n        </p>\n        <label htmlFor=\"confirm_pwd\">\n          Confirm Password:\n          <span className={validMatch && matchPwd ? \"valid\" : \"hide\"}>\n            <FontAwesomeIcon icon={faCheck} />\n          </span>\n          <span className={validMatch || !matchPwd ? \"hide\" : \"invalid\"}>\n            <FontAwesomeIcon icon={faTimes} />\n          </span>\n        </label>\n        <input\n          type=\"password\"\n          id=\"confirm_pwd\" //should mathch the htmlFor attaribute on the label\n          autoComplete=\"off\"\n          onChange={(e) => setMatchPwd(e.target.value)}\n          required\n          aria-invalid={validMatch ? \"false\" : \"true\"}\n          //This lets a screen reader whether the i/p field need to be adjusted\n          // before the form is submitted\n          aria-describedby=\"confirmnote\" // It provides another element that describes the input field\n          onFocus={() => setMatchFocus(true)}\n          onBlur={() => setMatchFocus(false)}\n        />\n        <p\n          id=\"pwdnote\"\n          className={matchFocus && !validMatch ? \"instructions\" : \"offscreen\"}\n        >\n          <FontAwesomeIcon icon={faInfoCircle} />\n          Must match the password input field above.\n        </p>\n        <button\n          disabled={!validName || !validPwd || !validMatch ? true : false}\n        >\n          Sign Up\n        </button>\n      </form>\n      <p>\n        Already registered?\n        <br />\n        <span className=\"line\">\n          {/* put router link here */}\n          <a href=\"#\">Sign In</a>\n        </span>\n      </p>\n    </section>\n  );\n};\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}