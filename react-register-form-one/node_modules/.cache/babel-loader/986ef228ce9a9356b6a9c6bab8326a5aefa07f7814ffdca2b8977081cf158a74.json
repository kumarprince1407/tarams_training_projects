{"ast":null,"code":"var _jsxFileName = \"/home/princekumar/Desktop/Dell/tarams_training_projects/react-register-form-one/src/ToDoList.jsx\",\n  _s = $RefreshSig$();\n// ToDoList.jsx\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./style.css\";\nimport { Button, InputBase } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const [userInput, setUserInput] = useState({\n    userid: \"\",\n    title: \"\",\n    completed: false\n  });\n  const location = useLocation();\n  const navigate = useNavigate();\n  //Extract the username from the token stored in local storage\n  const token = localStorage.getItem(\"accessToken\");\n  const decodedToken = token ? JSON.parse(atob(token.split(\".\")[1])) : null;\n\n  //Get the username from the decoded token\n  const username = decodedToken ? decodedToken.username : null;\n  //   const handleLogout = () => {\n  //     //Remove the token from local storage\n  //     localStorage.removeItem(\"accessToken\");\n\n  //     navigate(\"/\");\n  //   };\n\n  //   const navigateToLogin = () => {\n  //     navigate(\"/\");\n  //   };\n\n  //change\n  const [newItemCounter, setNewItemCounter] = useState(0);\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    const inputValue = type === \"checkbox\" ? checked : value;\n    setUserInput(prevState => ({\n      ...prevState,\n      [name]: inputValue\n    }));\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n\n    //Increment the ID before sending it to the server\n    setNewItemCounter(prevCounter => prevCounter + 1);\n\n    //Assign the counter value as the new id\n    const newItem = {\n      id: Math.floor(Math.random() * (1000 - 100 + 1)) + 100,\n      //check\n      username,\n      //Assign the username of logged in user\n      userid: userInput.userid,\n      //check\n      title: userInput.title,\n      completed: userInput.completed\n    };\n    try {\n      const response = await axios.post(`http://localhost:3002/todolist/${username}`, newItem);\n      if (response.status === 200) {\n        console.log(\"Data sent successfully\");\n        navigate(`/home/${username}`); // Navigate after successful submission\n      } else {\n        console.error(\"Failed to send data:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"Error sending data:\", error);\n    }\n    setUserInput({\n      userid: \"\",\n      title: \"\",\n      completed: false\n    });\n  };\n  const handleButtonClick = () => {\n    navigate(`/home/${username}`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fragment1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headingContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"heading1\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginRight: \"20px\",\n                fontSize: \"60px\"\n              },\n              children: \"ToDo List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"success\",\n            id: \"button\",\n            onClick: handleButtonClick,\n            style: {\n              width: \"180px\"\n            },\n            children: \"Homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mainContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              id: \"heading2\",\n              children: \"Enter new Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleFormSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"textarea1\",\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Task ID\",\n                  className: \"inputfield\",\n                  type: \"text\",\n                  name: \"userid\",\n                  value: userInput.userid,\n                  onChange: handleInputChange,\n                  sx: {\n                    width: \"150%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"textarea3\",\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Task details:\",\n                  className: \"inputfield\",\n                  type: \"text\",\n                  name: \"title\",\n                  value: userInput.title,\n                  onChange: handleInputChange,\n                  sx: {\n                    width: \"150%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                disabled: !textarea1 || !textarea3,\n                className: \"buttonContainer\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"success\",\n                  id: \"button1\",\n                  type: \"submit\",\n                  children: \"Add New Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footerContent\",\n      children: /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: \" \\xA9 Tarams Technologies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ToDoList, \"6z2kioIleTswZb8vi5lZPGI/IZM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ToDoList;\nexport default ToDoList;\n/*\nconst [toDoList, setToDoList] = useState([]);\nconst location = useLocation();\n\nconst navigate = useNavigate();\n\n//Extract the username from the token stored in local storage\nconst token = localStorage.getItem(\"accessToken\");\nconst decodedToken = token ? JSON.parse(atob(token.split(\".\")[1])) : null;\n\nconst username = decodedToken ? decodedToken.username : null;\nconst handleLogout = () => {\n  //Remove the token from local storage\n  localStorage.removeItem(\"accessToken\");\n\n  navigate(\"/\");\n};\n\nconst navigateToLogin = () => {\n  navigate(\"/\");\n  */\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["axios","React","useEffect","useState","useLocation","Button","InputBase","useNavigate","TextField","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDoList","_s","userInput","setUserInput","userid","title","completed","location","navigate","token","localStorage","getItem","decodedToken","JSON","parse","atob","split","username","newItemCounter","setNewItemCounter","handleInputChange","e","name","value","type","checked","target","inputValue","prevState","handleFormSubmit","preventDefault","prevCounter","newItem","id","Math","floor","random","response","post","status","console","log","error","handleButtonClick","children","className","style","marginRight","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","onClick","width","onSubmit","htmlFor","label","onChange","sx","disabled","textarea1","textarea3","_c","$RefreshReg$"],"sources":["/home/princekumar/Desktop/Dell/tarams_training_projects/react-register-form-one/src/ToDoList.jsx"],"sourcesContent":["// ToDoList.jsx\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./style.css\";\nimport { Button, InputBase } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport TextField from \"@mui/material/TextField\";\n\nfunction ToDoList() {\n  const [userInput, setUserInput] = useState({\n    userid: \"\",\n    title: \"\",\n    completed: false,\n  });\n\n  const location = useLocation();\n  const navigate = useNavigate();\n  //Extract the username from the token stored in local storage\n  const token = localStorage.getItem(\"accessToken\");\n  const decodedToken = token ? JSON.parse(atob(token.split(\".\")[1])) : null;\n\n  //Get the username from the decoded token\n  const username = decodedToken ? decodedToken.username : null;\n  //   const handleLogout = () => {\n  //     //Remove the token from local storage\n  //     localStorage.removeItem(\"accessToken\");\n\n  //     navigate(\"/\");\n  //   };\n\n  //   const navigateToLogin = () => {\n  //     navigate(\"/\");\n  //   };\n\n  //change\n  const [newItemCounter, setNewItemCounter] = useState(0);\n\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    const inputValue = type === \"checkbox\" ? checked : value;\n\n    setUserInput((prevState) => ({\n      ...prevState,\n      [name]: inputValue,\n    }));\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n\n    //Increment the ID before sending it to the server\n    setNewItemCounter((prevCounter) => prevCounter + 1);\n\n    //Assign the counter value as the new id\n    const newItem = {\n      id: Math.floor(Math.random() * (1000 - 100 + 1)) + 100, //check\n      username, //Assign the username of logged in user\n      userid: userInput.userid, //check\n      title: userInput.title,\n      completed: userInput.completed,\n    };\n\n    try {\n      const response = await axios.post(\n        `http://localhost:3002/todolist/${username}`,\n        newItem\n      );\n\n      if (response.status === 200) {\n        console.log(\"Data sent successfully\");\n        navigate(`/home/${username}`); // Navigate after successful submission\n      } else {\n        console.error(\"Failed to send data:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"Error sending data:\", error);\n    }\n\n    setUserInput({\n      userid: \"\",\n      title: \"\",\n      completed: false,\n    });\n  };\n\n  const handleButtonClick = () => {\n    navigate(`/home/${username}`);\n  };\n\n  return (\n    <>\n      <React.Fragment>\n        <div className=\"fragment1\">\n          <div className=\"headingContainer\">\n            <h2 id=\"heading1\">\n              {\" \"}\n              <span style={{ marginRight: \"20px\", fontSize: \"60px\" }}>\n                ToDo List\n              </span>\n            </h2>\n            <br />\n\n            <Button\n              variant=\"contained\"\n              color=\"success\"\n              id=\"button\"\n              onClick={handleButtonClick}\n              style={{ width: \"180px\" }}\n            >\n              Homepage\n            </Button>\n            <br />\n            <br />\n          </div>\n          {/* Form to add new ToDo */}\n          <>\n            {/* <h1>\n            {username\n              ? `Hello, ${username}! Welcome to your dashboard,`\n              : `Please Login to view your homepage`}\n          </h1> */}\n          </>\n\n          <div className=\"mainContainer\">\n            <div className=\"inputForm\">\n              <h3 id=\"heading2\">Enter new Task</h3>\n\n              <form onSubmit={handleFormSubmit}>\n                <label htmlFor=\"textarea1\">\n                  <br />\n                  <TextField\n                    label=\"Task ID\"\n                    className=\"inputfield\"\n                    type=\"text\"\n                    name=\"userid\"\n                    value={userInput.userid}\n                    onChange={handleInputChange}\n                    sx={{ width: \"150%\" }}\n                  />\n                </label>\n                <br />\n\n                <br />\n                <label htmlFor=\"textarea3\">\n                  <br />\n                  <TextField\n                    label=\"Task details:\"\n                    className=\"inputfield\"\n                    type=\"text\"\n                    name=\"title\"\n                    value={userInput.title}\n                    onChange={handleInputChange}\n                    sx={{ width: \"150%\" }}\n                  />\n                </label>\n                <br />\n                <br />\n\n                <br />\n                <div\n                  disabled={!textarea1 || !textarea3}\n                  className=\"buttonContainer\"\n                >\n                  <Button\n                    variant=\"contained\"\n                    color=\"success\"\n                    id=\"button1\"\n                    type=\"submit\"\n                  >\n                    Add New Task\n                  </Button>\n                </div>\n              </form>\n            </div>\n            <>\n              {/* {username ? (\n              <button onClick={handleLogout}>Logout</button>\n            ) : (\n              <button onClick={navigateToLogin}>Log In</button>\n            )} */}\n            </>\n          </div>\n        </div>\n      </React.Fragment>\n      <div className=\"footerContent\">\n        <footer> &copy; Tarams Technologies</footer>\n      </div>\n    </>\n  );\n}\n\nexport default ToDoList;\n/*\nconst [toDoList, setToDoList] = useState([]);\nconst location = useLocation();\n\nconst navigate = useNavigate();\n\n//Extract the username from the token stored in local storage\nconst token = localStorage.getItem(\"accessToken\");\nconst decodedToken = token ? JSON.parse(atob(token.split(\".\")[1])) : null;\n\nconst username = decodedToken ? decodedToken.username : null;\nconst handleLogout = () => {\n  //Remove the token from local storage\n  localStorage.removeItem(\"accessToken\");\n\n  navigate(\"/\");\n};\n\nconst navigateToLogin = () => {\n  navigate(\"/\");\n  */\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}